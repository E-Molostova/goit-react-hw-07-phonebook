{"version":3,"sources":["Components/ContactList/ContactList.module.css","Components/Filter/Filte.module.css","redux/phonebook/phonebook-actions.js","redux/phonebook/phonebook-reducer.js","redux/store.js","redux/phonebook/phonebook-selectors.js","redux/phonebook/phonebook-operations.js","Components/ContactForm/ContactForm.js","Components/ContactList/ContactList.js","Components/Filter/Filter.js","App.js","index.js","Components/ContactForm/ContactForm.module.css"],"names":["module","exports","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","contacts","createReducer","_","payload","state","filter","id","loading","error","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","configureStore","reducer","phonebook","phonebookReducer","getContacts","items","getFilter","getFilteredContacts","createSelector","name","toLowerCase","includes","axios","defaults","baseURL","ContactForm","useState","setName","number","setNumber","useSelector","dispatch","useDispatch","handleChange","e","target","value","isContactExist","newContact","some","contact","toLocaleLowerCase","alert","a","post","data","addContact","className","style","formContact","onSubmit","preventDefault","inputLabel","type","onChange","pattern","title","required","contactInput","buttonInput","ContactList","filteredContacts","onDeleteBtn","contactId","delete","contactsList","map","contactsItem","contactsDeleteBtn","onClick","Filter","divFilter","inputFilter","App","useEffect","get","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bd864a93.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsList\":\"ContactList_contactsList__2zG-R\",\"contactsItem\":\"ContactList_contactsItem__a12bf\",\"contactsDeleteBtn\":\"ContactList_contactsDeleteBtn__1hMzw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputFilter\":\"Filte_inputFilter__2XEkS\",\"inputLabel\":\"Filte_inputLabel__Yl9x_\",\"divFilter\":\"Filte_divFilter__2s5_a\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactsRequest = createAction('phonebook/fetchContactsRequest');\r\nexport const fetchContactsSuccess = createAction('phonebook/fetchContactsSuccess');\r\nexport const fetchContactsError = createAction('phonebook/fetchContactsError');\r\n\r\nexport const addContactRequest = createAction('phonebook/addContactRequest');\r\nexport const addContactSuccess = createAction('phonebook/addContactSuccess');\r\nexport const addContactError = createAction('phonebook/addContactError');\r\n\r\nexport const deleteContactRequest = createAction('phonebook/deleteContactRequest');\r\nexport const deleteContactSuccess = createAction('phonebook/deleteContactSuccess');\r\nexport const deleteContactError = createAction('phonebook/deleteContactError');\r\n\r\nexport const changeFilter = createAction('phonebook/changeFilter');\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  changeFilter,\r\n} from './phonebook-actions';\r\n\r\nconst contacts = createReducer([], {\r\n  [fetchContactsSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteContactSuccess]: (state, { payload }) => state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [fetchContactsRequest]: () => true,\r\n  [fetchContactsSuccess]: () => false,\r\n  [fetchContactsError]: () => false,\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst error = createReducer(null, {});\r\n\r\nexport default combineReducers({\r\n  contacts,\r\n  filter,\r\n  loading,\r\n  error,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\n\r\nimport phonebookReducer from './phonebook/phonebook-reducer';\r\nimport {\r\n  // persistStore,\r\n  // persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\n// import storage from \"redux-persist/lib/storage\";\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n];\r\n\r\n// const rootReducer = combineReducers({\r\n//   phonebook: phonebookReducer,\r\n// });\r\n// const persistedReducer = persistReducer(phonebookPersistConfig, rootReducer);\r\n// const phonebookPersistConfig = {\r\n//   key: \"phonebook\",\r\n//   storage,\r\n//   blacklist: [\"filter\"],\r\n// };\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    phonebook: phonebookReducer,\r\n    // phonebook: persistReducer(phonebookPersistConfig, phonebookReducer),\r\n  },\r\n  middleware,\r\n});\r\n\r\n// export const persistor = persistStore(store);\r\nexport default store;\r\n","import { createSelector } from '@reduxjs/toolkit';\r\nexport const getContacts = state => state.phonebook.items;\r\nexport const getFilter = state => state.phonebook.filter;\r\n\r\nexport const getFilteredContacts = createSelector([getContacts, getFilter], (contacts, filter) => {\r\n  return contacts.filter(({ name }) => name.toLowerCase().includes(filter.toLowerCase()));\r\n});\r\n","import axios from 'axios';\r\nimport {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n} from './phonebook-actions';\r\n\r\naxios.defaults.baseURL = 'http://localhost:3004';\r\n\r\nexport const fetchContacts = () => async dispatch => {\r\n  dispatch(fetchContactsRequest());\r\n\r\n  try {\r\n    const { data } = await axios.get('/contacts');\r\n\r\n    dispatch(fetchContactsSuccess(data));\r\n  } catch (error) {\r\n    dispatch(fetchContactsError(error));\r\n  }\r\n};\r\n\r\nexport const addContact =\r\n  ({ name, number }) =>\r\n  async dispatch => {\r\n    const contact = {\r\n      name,\r\n      number,\r\n    };\r\n\r\n    dispatch(addContactRequest());\r\n\r\n    try {\r\n      const { data } = await axios.post('/contacts', contact);\r\n\r\n      dispatch(addContactSuccess(data));\r\n    } catch (error) {\r\n      dispatch(addContactError(error));\r\n    }\r\n  };\r\n\r\nexport const deleteContact = contactId => async dispatch => {\r\n  dispatch(deleteContactRequest());\r\n\r\n  try {\r\n    await axios.delete(`/contacts/${contactId}`);\r\n\r\n    dispatch(deleteContactSuccess(contactId));\r\n  } catch (error) {\r\n    dispatch(deleteContactError(error));\r\n  }\r\n};\r\n","import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getContacts } from '../../redux/phonebook/phonebook-selectors';\r\nimport { addContact } from '../../redux/phonebook/phonebook-operations';\r\n\r\nimport style from './ContactForm.module.css';\r\n\r\nconst ContactForm = () => {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const contacts = useSelector(getContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  const isContactExist = newContact => {\r\n    contacts.some(\r\n      contact =>\r\n        contact.name.toLocaleLowerCase() === newContact.name.toLocaleLowerCase() ||\r\n        contacts.some(contact => contact.number === newContact.number),\r\n    )\r\n      ? alert(`Friend ${newContact.name} or number ${newContact.number} is alredy exist`)\r\n      : dispatch(addContact(newContact));\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    isContactExist({ name, number });\r\n    reset();\r\n  };\r\n\r\n  return (\r\n    <form className={style.formContact} onSubmit={handleSubmit}>\r\n      <label className={style.inputLabel}>\r\n        Name\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          onChange={handleChange}\r\n          value={name}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          className={style.contactInput}\r\n        />\r\n      </label>\r\n      <label className={style.inputLabel}>\r\n        Number\r\n        <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          onChange={handleChange}\r\n          value={number}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          className={style.contactInput}\r\n        />\r\n      </label>\r\n      <button className={style.buttonInput} type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ContactForm;\r\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport { deleteContact } from '../../redux/phonebook/phonebook-operations';\r\nimport { getFilteredContacts } from '../../redux/phonebook/phonebook-selectors';\r\nimport style from './ContactList.module.css';\r\n\r\nconst ContactList = () => {\r\n  // const { contacts, filter } = useSelector(state => state);\r\n\r\n  const filteredContacts = useSelector(getFilteredContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  const onDeleteBtn = id => dispatch(deleteContact(id));\r\n\r\n  // const filteredContacts = (contacts, filter) => {\r\n  //   console.log(contacts);\r\n  //   return contacts.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()));\r\n  // };\r\n\r\n  // const filterContacts = filteredContacts(contacts, filter);\r\n\r\n  return (\r\n    <ul className={style.contactsList}>\r\n      {filteredContacts.map(contact => (\r\n        <li className={style.contactsItem} key={contact.id}>\r\n          <p>{contact.name + ': ' + contact.number}</p>\r\n          <button\r\n            className={style.contactsDeleteBtn}\r\n            id={contact.id}\r\n            type=\"button\"\r\n            onClick={e => onDeleteBtn(contact.id)}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport { changeFilter } from '../../redux/phonebook/phonebook-actions';\r\nimport { getFilter } from '../../redux/phonebook/phonebook-selectors';\r\n\r\nimport style from './Filte.module.css';\r\n\r\nconst Filter = () => {\r\n  const filter = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n  const handleChangeFilter = e => dispatch(changeFilter(e.target.value));\r\n  return (\r\n    <div className={style.divFilter}>\r\n      <label className={style.inputLabel}>\r\n        Find contacts by name\r\n        <input\r\n          className={style.inputFilter}\r\n          type=\"text\"\r\n          value={filter}\r\n          name=\"search\"\r\n          onChange={handleChangeFilter}\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport ContactForm from './Components/ContactForm/ContactForm';\nimport ContactList from './Components/ContactList/ContactList';\nimport Filter from './Components/Filter/Filter';\nimport { fetchContacts } from './redux/phonebook/phonebook-operations';\n\nconst App = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  // useEffect(() => {\n  //   localStorage.setItem('contacts', JSON.stringify(contacts));\n  // }, [contacts]);\n\n  return (\n    <>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts </h2>\n      <Filter />\n      <ContactList />\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport store from './redux/store';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactInput\":\"ContactForm_contactInput__3F4aX\",\"buttonInput\":\"ContactForm_buttonInput__2jpFN\",\"formContact\":\"ContactForm_formContact__1m6-5\",\"inputLabel\":\"ContactForm_inputLabel__1leXm\"};"],"sourceRoot":""}